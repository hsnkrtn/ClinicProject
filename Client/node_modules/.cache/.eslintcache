[{"C:\\Users\\Hasan\\Desktop\\ClinicProject\\Client\\src\\index.js":"1","C:\\Users\\Hasan\\Desktop\\ClinicProject\\Client\\src\\App.js":"2","C:\\Users\\Hasan\\Desktop\\ClinicProject\\Client\\src\\Components\\Sidebar.js":"3","C:\\Users\\Hasan\\Desktop\\ClinicProject\\Client\\src\\Components\\Appointment.js":"4","C:\\Users\\Hasan\\Desktop\\ClinicProject\\Client\\src\\Components\\Mainboard.js":"5","C:\\Users\\Hasan\\Desktop\\ClinicProject\\Client\\src\\Components\\Appointmentlist.js":"6"},{"size":267,"mtime":1675522521831,"results":"7","hashOfConfig":"8"},{"size":1028,"mtime":1680533772116,"results":"9","hashOfConfig":"8"},{"size":7196,"mtime":1680533482019,"results":"10","hashOfConfig":"8"},{"size":5913,"mtime":1680532964345,"results":"11","hashOfConfig":"8"},{"size":649,"mtime":1680401946744,"results":"12","hashOfConfig":"8"},{"size":1148,"mtime":1680547848029,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"1xhtw0u",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"17"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Hasan\\Desktop\\ClinicProject\\Client\\src\\index.js",[],[],[],"C:\\Users\\Hasan\\Desktop\\ClinicProject\\Client\\src\\App.js",["35","36"],[],"C:\\Users\\Hasan\\Desktop\\ClinicProject\\Client\\src\\Components\\Sidebar.js",["37","38","39","40","41"],[],"C:\\Users\\Hasan\\Desktop\\ClinicProject\\Client\\src\\Components\\Appointment.js",["42","43","44","45"],[],"import React, { useState } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { Sidebarinfo } from \"../App\";\r\n\r\nfunction Appointment() {\r\n  const mainboardextend = {\r\n    height: \"35%\",\r\n    backgroundColor: \"#f1f3f6\",\r\n    marginLeft: 50,\r\n    height: \"100%\",\r\n    top: 50,\r\n  };\r\n  const mainboard = {\r\n    height: \"35%\",\r\n    backgroundColor: \"#f1f3f6\",\r\n    marginLeft: 250,\r\n    top: 50,\r\n    height: \"100%\",\r\n  };\r\n  const themecolor = {\r\n    color: \"#0f238c\",\r\n  };\r\n  const { hidesidebar, setHidesidebar } = useContext(Sidebarinfo);\r\n  const [registeredpatient, setRegisteredpatient] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [doctor, setDoctor] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [dateTime, setDateTime] = useState(\"\");\r\n  const [comment, setComment] = useState(\"\");\r\n  const [reference, setReference] = useState(\"\");\r\n  const [sendSMS, setSendSMS] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(name);\r\n    console.log(doctor);\r\n    console.log(phone);\r\n    console.log(dateTime);\r\n    console.log(comment);\r\n    console.log(sendSMS);\r\n  };\r\n  return (\r\n    <div\r\n      className=\"mainboard\"\r\n      style={hidesidebar ? mainboardextend : mainboard}\r\n    >\r\n      <div className=\"Appointment\">\r\n        <div className=\"Appointment-header\" style={themecolor}>\r\n          {\" \"}\r\n          <span>\r\n            <i class=\"fa fa-calendar-plus-o\" aria-hidden=\"true\"></i>\r\n          </span>\r\n          <h1>Randevu Ekle</h1>{\" \"}\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          {\" \"}\r\n          <section>\r\n            <label>\r\n              <h4>Kayıtlı Hasta</h4>\r\n            </label>\r\n            <div class=\"toggleWrapper\">\r\n              <input\r\n                type=\"checkbox\"\r\n                id=\"patientswitch\"\r\n                onChange={(e) => setRegisteredpatient(!registeredpatient)}\r\n              />\r\n              <label id=\"switchlabel\" for=\"patientswitch\"></label>\r\n            </div>\r\n          </section>\r\n          {registeredpatient ? (\r\n            <section>\r\n              {\" \"}\r\n              <label for=\"fname\">\r\n                <h4>Hasta Bul</h4>\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"appointmenttext\"\r\n                name=\"fname\"\r\n                placeholder=\"Hasta Bul\"\r\n                required\r\n              ></input>{\" \"}\r\n            </section>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <section>\r\n            {\" \"}\r\n            <label for=\"fname\">\r\n              <h4>İsim Soyisim *</h4>\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"appointmenttext\"\r\n              name=\"fname\"\r\n              placeholder=\"İsim Soyisim\"\r\n              required\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></input>{\" \"}\r\n          </section>\r\n          <section>\r\n            {\" \"}\r\n            <label for=\"fname\">\r\n              <h4>Doktor *</h4>\r\n            </label>\r\n            <select id=\"doctors\" onChange={(e) => setDoctor(e.target.value)}>\r\n              <option value=\"Kadir\">Kadir</option>\r\n              <option value=\"Hasan\">Hasan</option>\r\n              <option value=\"Enes\">Enes</option>\r\n              <option value=\"Muhammed\">Muhammed</option>\r\n            </select>\r\n          </section>\r\n          <section>\r\n            <label for=\"phone\">\r\n              <h4> Telefon Numarası</h4>\r\n            </label>\r\n            <input\r\n              type=\"tel\"\r\n              id=\"phone\"\r\n              name=\"phone\"\r\n              placeholder=\"0555-555-5555\"\r\n              required\r\n              onChange={(e) => setPhone(e.target.value)}\r\n            ></input>\r\n          </section>\r\n          <section>\r\n            <label>\r\n              <h4>Tarih ve Saat *</h4>\r\n            </label>\r\n\r\n            <input\r\n              type=\"datetime-local\"\r\n              id=\"meeting-date\"\r\n              min=\"2018-01-01\"\r\n              max=\"2099-12-31\"\r\n              required\r\n              onChange={(e) => setDateTime(e.target.value)}\r\n            ></input>\r\n          </section>\r\n          <section>\r\n            {\" \"}\r\n            <label for=\"fname\">\r\n              <h4>Açıklama</h4>\r\n            </label>\r\n            <textarea\r\n              type=\"textarea\"\r\n              id=\"appointmentproblemtext\"\r\n              name=\"fname\"\r\n              placeholder=\"Açıklama\"\r\n              onChange={(e) => setComment(e.target.value)}\r\n            ></textarea>{\" \"}\r\n          </section>\r\n          <section>\r\n            {\" \"}\r\n            <label for=\"fname\">\r\n              <h4>Referans</h4>\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"appointmenttext\"\r\n              name=\"fname\"\r\n              placeholder=\"Referans\"\r\n              onChange={(e) => setReference(e.target.value)}\r\n            ></input>{\" \"}\r\n          </section>\r\n          <section>\r\n            <label>\r\n              <h4>SMS Gönder</h4>\r\n            </label>\r\n            <div class=\"toggleWrapper\">\r\n              <input\r\n                type=\"checkbox\"\r\n                id=\"switch\"\r\n                onChange={(e) => setSendSMS(!sendSMS)}\r\n              />\r\n              <label id=\"switchlabel\" for=\"switch\"></label>\r\n            </div>\r\n          </section>\r\n          <section className=\"SaveOrCancel\">\r\n            {\" \"}\r\n            <label>\r\n              <h4> Randevuyu Kaydet</h4>\r\n            </label>\r\n            <div className=\"SaveOrCancelButtons\">\r\n              {\" \"}\r\n              <button id=\"cancelbutton\">Vazgeç</button>\r\n              <button id=\"savebutton\" type=\"submit\">\r\n                Kaydet\r\n              </button>\r\n            </div>\r\n          </section>\r\n        </form>\r\n\r\n        <></>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Appointment;\r\n","C:\\Users\\Hasan\\Desktop\\ClinicProject\\Client\\src\\Components\\Mainboard.js",["46"],[],"import React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { Sidebarinfo } from \"../App\";\r\n\r\nfunction Mainboard() {\r\n  const mainboardextend = {\r\n    height: \"35%\",\r\n    backgroundColor: \"#CCE2FF\",\r\n    marginLeft: 50,\r\n    top: 50,\r\n    flex: 1\r\n  };\r\n  const mainboard = {\r\n    height: \"35%\",\r\n    backgroundColor: \"#CCE2FF\",\r\n    marginLeft: 250,\r\n    top: 50,\r\n    flex: 1  };\r\n\r\n  const { hidesidebar, setHidesidebar } = useContext(Sidebarinfo);\r\n\r\n  return (\r\n    <div\r\n      className=\"mainboard\"\r\n      style={hidesidebar ? mainboardextend : mainboard}\r\n    >\r\n      Mainboard\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Mainboard;\r\n","C:\\Users\\Hasan\\Desktop\\ClinicProject\\Client\\src\\Components\\Appointmentlist.js",["47","48","49"],[],{"ruleId":"50","severity":1,"message":"51","line":2,"column":8,"nodeType":"52","messageId":"53","endLine":2,"endColumn":17},{"ruleId":"50","severity":1,"message":"54","line":13,"column":15,"nodeType":"52","messageId":"53","endLine":13,"endColumn":21},{"ruleId":"50","severity":1,"message":"55","line":2,"column":10,"nodeType":"52","messageId":"53","endLine":2,"endColumn":19},{"ruleId":"56","severity":1,"message":"57","line":117,"column":11,"nodeType":"58","endLine":117,"endColumn":63},{"ruleId":"56","severity":1,"message":"57","line":122,"column":11,"nodeType":"58","endLine":122,"endColumn":60},{"ruleId":"59","severity":1,"message":"60","line":150,"column":17,"nodeType":"58","endLine":150,"endColumn":69},{"ruleId":"61","severity":1,"message":"62","line":226,"column":49,"nodeType":"63","messageId":"64","endLine":226,"endColumn":51},{"ruleId":"65","severity":1,"message":"66","line":10,"column":5,"nodeType":"67","messageId":"68","endLine":10,"endColumn":11},{"ruleId":"65","severity":1,"message":"66","line":18,"column":5,"nodeType":"67","messageId":"68","endLine":18,"endColumn":11},{"ruleId":"50","severity":1,"message":"69","line":23,"column":24,"nodeType":"52","messageId":"53","endLine":23,"endColumn":38},{"ruleId":"50","severity":1,"message":"70","line":30,"column":10,"nodeType":"52","messageId":"53","endLine":30,"endColumn":19},{"ruleId":"50","severity":1,"message":"69","line":20,"column":24,"nodeType":"52","messageId":"53","endLine":20,"endColumn":38},{"ruleId":"50","severity":1,"message":"71","line":4,"column":10,"nodeType":"52","messageId":"53","endLine":4,"endColumn":14},{"ruleId":"50","severity":1,"message":"69","line":11,"column":24,"nodeType":"52","messageId":"53","endLine":11,"endColumn":38},{"ruleId":"72","severity":1,"message":"73","line":35,"column":6,"nodeType":"74","endLine":35,"endColumn":8,"suggestions":"75"},"no-unused-vars","'Mainboard' is defined but never used.","Identifier","unusedVar","'setURL' is assigned a value but never used.","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-dupe-keys","Duplicate key 'height'.","ObjectExpression","unexpected","'setHidesidebar' is assigned a value but never used.","'reference' is assigned a value but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'AppointmentList' and 'URL'. Either include them or remove the dependency array.","ArrayExpression",["76"],{"desc":"77","fix":"78"},"Update the dependencies array to be: [AppointmentList, URL]",{"range":"79","text":"80"},[934,936],"[AppointmentList, URL]"]