{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hasan\\\\Desktop\\\\ClinicProject\\\\Client\\\\src\\\\Components\\\\Scheduler.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useContext } from \"react\";\nimport { Sidebarinfo } from \"../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Scheduler() {\n  _s();\n  const mainboardextend = {\n    backgroundColor: \"#CCE2FF\",\n    marginLeft: 75,\n    top: 50\n  };\n  const mainboard = {\n    backgroundColor: \"#CCE2FF\",\n    marginLeft: 250,\n    top: 50\n  };\n  const currentYear = new Date().getFullYear();\n  const currentmonth = new Date().getMonth();\n  const {\n    hidesidebar,\n    setHidesidebar\n  } = useContext(Sidebarinfo);\n  const [year, setYear] = useState(2024);\n  const [month, setMonth] = useState(0); // 0 ocak\n  const [day, setDay] = useState(1);\n  const selecteddate = `${year}${month}${day}`;\n  let firstdayofmonth = new Date(year, month, 1).getDay(); // Ayın hangi gün ile başladığını veriyor 0-6 arası. 0 Pazar günü.\n  let lastdateofmonth = new Date(year, month + 1, 0).getDate(); // Ayın kaç gün olduğunu veriyor\n\n  function getFebdays() {\n    return year % 4 === 0 ? 29 : 28;\n  }\n  const NofDays = [31, getFebdays(), 31, 30, 31, 30, 31, 30, 31, 30, 31, 30];\n  const weekdays = [\"Pazar\", \"Pazartesi\", \"Salı\", \"Çarşamba\", \"Perşembe\", \"Cuma\", \"Cumartesi\"];\n  const months = [\"Ocak\", \"Şubat\", \"Mart\", \"Nisan\", \"Mayıs\", \"Haziran\", \"Temmuz\", \"Ağustos\", \"Eylül\", \"Ekim\", \"Kasım\", \"Aralık\"];\n  let daysinmonth = [];\n  function getNofdays() {\n    let firstdayoftheyear = new Date(year, 0, 1).getDay();\n    for (let i = 0; i <= firstdayoftheyear; i++) {\n      daysinmonth.push(i);\n    }\n    months.map((month, index) => {\n      for (let i = 1; i <= NofDays[index]; i++) {\n        daysinmonth.push(i);\n      }\n    });\n    return daysinmonth;\n  }\n  const hours = [\"09.00\", \"10.00\", \"11.00\", \"12.00\", \"13.00\", \"14.00\", \"15.00\", \"16.00\", \"17.00\", \"18.00\", \"19.00\", \"20.00\", \"21.00\", \"22.00\"];\n  useState(() => {\n    getNofdays();\n    console.log(\"ilkgun\", firstdayofmonth);\n    console.log(\"songun\", lastdateofmonth);\n  }, [year]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainboard\",\n    style: hidesidebar ? mainboardextend : mainboard,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"scheduler\",\n        children: weekdays.map((day, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"scheduler-weekdays\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\" \", day]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: daysinmonth[index]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 19\n              }, this), \"  \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"scheduler-cells\",\n              children: hours.map((hour, index) => {\n                return /*#__PURE__*/_jsxDEV(\"li\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 28\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"scheduler-hours\",\n        children: hours.map((hour, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: hour\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(Scheduler, \"IWY0IlWPjfeud4wS3zguXUcAH2Y=\");\n_c = Scheduler;\nexport default Scheduler;\n{\n  /* <input\r\n          type=\"number\"\r\n          id=\"year\"\r\n          min=\"2000\"\r\n          max=\"2100\"\r\n          onChange={(e) => setYear(e.target.value)}\r\n        ></input> */\n}\nvar _c;\n$RefreshReg$(_c, \"Scheduler\");","map":{"version":3,"names":["React","useState","useContext","Sidebarinfo","jsxDEV","_jsxDEV","Scheduler","_s","mainboardextend","backgroundColor","marginLeft","top","mainboard","currentYear","Date","getFullYear","currentmonth","getMonth","hidesidebar","setHidesidebar","year","setYear","month","setMonth","day","setDay","selecteddate","firstdayofmonth","getDay","lastdateofmonth","getDate","getFebdays","NofDays","weekdays","months","daysinmonth","getNofdays","firstdayoftheyear","i","push","map","index","hours","console","log","className","style","children","fileName","_jsxFileName","lineNumber","columnNumber","hour","_c","$RefreshReg$"],"sources":["C:/Users/Hasan/Desktop/ClinicProject/Client/src/Components/Scheduler.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { Sidebarinfo } from \"../App\";\r\n\r\nfunction Scheduler() {\r\n  const mainboardextend = {\r\n    backgroundColor: \"#CCE2FF\",\r\n    marginLeft: 75,\r\n    top: 50,\r\n  };\r\n  const mainboard = {\r\n    backgroundColor: \"#CCE2FF\",\r\n    marginLeft: 250,\r\n    top: 50,\r\n  };\r\n\r\n  const currentYear = new Date().getFullYear();\r\n  const currentmonth = new Date().getMonth();\r\n\r\n  const { hidesidebar, setHidesidebar } = useContext(Sidebarinfo);\r\n  const [year, setYear] = useState(2024);\r\n  const [month, setMonth] = useState(0); // 0 ocak\r\n  const [day, setDay] = useState(1);\r\n  const selecteddate = `${year}${month}${day}`;\r\n  let firstdayofmonth = new Date(year, month, 1).getDay(); // Ayın hangi gün ile başladığını veriyor 0-6 arası. 0 Pazar günü.\r\n  let lastdateofmonth = new Date(year, month + 1, 0).getDate(); // Ayın kaç gün olduğunu veriyor\r\n\r\n  function getFebdays() {\r\n    return year % 4 === 0 ? 29 : 28;\r\n  }\r\n\r\n  const NofDays = [31, getFebdays(), 31, 30, 31, 30, 31, 30, 31, 30, 31, 30];\r\n\r\n  const weekdays = [\r\n    \"Pazar\",\r\n    \"Pazartesi\",\r\n    \"Salı\",\r\n    \"Çarşamba\",\r\n    \"Perşembe\",\r\n    \"Cuma\",\r\n    \"Cumartesi\",\r\n  ];\r\n  const months = [\r\n    \"Ocak\",\r\n    \"Şubat\",\r\n    \"Mart\",\r\n    \"Nisan\",\r\n    \"Mayıs\",\r\n    \"Haziran\",\r\n    \"Temmuz\",\r\n    \"Ağustos\",\r\n    \"Eylül\",\r\n    \"Ekim\",\r\n    \"Kasım\",\r\n    \"Aralık\",\r\n  ];\r\n\r\n  let daysinmonth = [];\r\n  function getNofdays() {\r\n    let firstdayoftheyear = new Date(year, 0, 1).getDay();\r\n\r\n    for (let i = 0; i <= firstdayoftheyear; i++) {\r\n      daysinmonth.push(i);\r\n    }\r\n    months.map((month, index) => {\r\n      for (let i = 1; i <= NofDays[index]; i++) {\r\n        daysinmonth.push(i);\r\n      }\r\n    });\r\n\r\n    return daysinmonth;\r\n  }\r\n\r\n  const hours = [\r\n    \"09.00\",\r\n    \"10.00\",\r\n    \"11.00\",\r\n    \"12.00\",\r\n    \"13.00\",\r\n    \"14.00\",\r\n    \"15.00\",\r\n    \"16.00\",\r\n    \"17.00\",\r\n    \"18.00\",\r\n    \"19.00\",\r\n    \"20.00\",\r\n    \"21.00\",\r\n    \"22.00\",\r\n  ];\r\n\r\n  useState(() => {\r\n    getNofdays();\r\n    console.log(\"ilkgun\", firstdayofmonth);\r\n    console.log(\"songun\", lastdateofmonth);\r\n  }, [year]);\r\n\r\n  return (\r\n    <div\r\n      className=\"mainboard\"\r\n      style={hidesidebar ? mainboardextend : mainboard}\r\n    >\r\n      <div>\r\n        <ul className=\"scheduler\">\r\n          {weekdays.map((day, index) => {\r\n            return (\r\n              <li>\r\n                <div className=\"scheduler-weekdays\">\r\n                  {\" \"}\r\n                  <h3> {day}</h3>\r\n                  <h4>{daysinmonth[index]}</h4>\r\n                  {\"  \"}\r\n                </div>\r\n\r\n                <ul className=\"scheduler-cells\">\r\n                  {hours.map((hour, index) => {\r\n                    return <li></li>;\r\n                  })}\r\n                </ul>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>{\" \"}\r\n        <ul className=\"scheduler-hours\">\r\n          {hours.map((hour, index) => {\r\n            return <li>{hour}</li>;\r\n          })}\r\n        </ul>\r\n      </div>{\" \"}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Scheduler;\r\n{\r\n  /* <input\r\n          type=\"number\"\r\n          id=\"year\"\r\n          min=\"2000\"\r\n          max=\"2100\"\r\n          onChange={(e) => setYear(e.target.value)}\r\n        ></input> */\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,WAAW,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAMC,eAAe,GAAG;IACtBC,eAAe,EAAE,SAAS;IAC1BC,UAAU,EAAE,EAAE;IACdC,GAAG,EAAE;EACP,CAAC;EACD,MAAMC,SAAS,GAAG;IAChBH,eAAe,EAAE,SAAS;IAC1BC,UAAU,EAAE,GAAG;IACfC,GAAG,EAAE;EACP,CAAC;EAED,MAAME,WAAW,GAAG,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE;EAC5C,MAAMC,YAAY,GAAG,IAAIF,IAAI,EAAE,CAACG,QAAQ,EAAE;EAE1C,MAAM;IAAEC,WAAW;IAAEC;EAAe,CAAC,GAAGjB,UAAU,CAACC,WAAW,CAAC;EAC/D,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACqB,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACvC,MAAM,CAACuB,GAAG,EAAEC,MAAM,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC;EACjC,MAAMyB,YAAY,GAAI,GAAEN,IAAK,GAAEE,KAAM,GAAEE,GAAI,EAAC;EAC5C,IAAIG,eAAe,GAAG,IAAIb,IAAI,CAACM,IAAI,EAAEE,KAAK,EAAE,CAAC,CAAC,CAACM,MAAM,EAAE,CAAC,CAAC;EACzD,IAAIC,eAAe,GAAG,IAAIf,IAAI,CAACM,IAAI,EAAEE,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAACQ,OAAO,EAAE,CAAC,CAAC;;EAE9D,SAASC,UAAUA,CAAA,EAAG;IACpB,OAAOX,IAAI,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE;EACjC;EAEA,MAAMY,OAAO,GAAG,CAAC,EAAE,EAAED,UAAU,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EAE1E,MAAME,QAAQ,GAAG,CACf,OAAO,EACP,WAAW,EACX,MAAM,EACN,UAAU,EACV,UAAU,EACV,MAAM,EACN,WAAW,CACZ;EACD,MAAMC,MAAM,GAAG,CACb,MAAM,EACN,OAAO,EACP,MAAM,EACN,OAAO,EACP,OAAO,EACP,SAAS,EACT,QAAQ,EACR,SAAS,EACT,OAAO,EACP,MAAM,EACN,OAAO,EACP,QAAQ,CACT;EAED,IAAIC,WAAW,GAAG,EAAE;EACpB,SAASC,UAAUA,CAAA,EAAG;IACpB,IAAIC,iBAAiB,GAAG,IAAIvB,IAAI,CAACM,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAACQ,MAAM,EAAE;IAErD,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAID,iBAAiB,EAAEC,CAAC,EAAE,EAAE;MAC3CH,WAAW,CAACI,IAAI,CAACD,CAAC,CAAC;IACrB;IACAJ,MAAM,CAACM,GAAG,CAAC,CAAClB,KAAK,EAAEmB,KAAK,KAAK;MAC3B,KAAK,IAAIH,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIN,OAAO,CAACS,KAAK,CAAC,EAAEH,CAAC,EAAE,EAAE;QACxCH,WAAW,CAACI,IAAI,CAACD,CAAC,CAAC;MACrB;IACF,CAAC,CAAC;IAEF,OAAOH,WAAW;EACpB;EAEA,MAAMO,KAAK,GAAG,CACZ,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,CACR;EAEDzC,QAAQ,CAAC,MAAM;IACbmC,UAAU,EAAE;IACZO,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEjB,eAAe,CAAC;IACtCgB,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEf,eAAe,CAAC;EACxC,CAAC,EAAE,CAACT,IAAI,CAAC,CAAC;EAEV,oBACEf,OAAA;IACEwC,SAAS,EAAC,WAAW;IACrBC,KAAK,EAAE5B,WAAW,GAAGV,eAAe,GAAGI,SAAU;IAAAmC,QAAA,gBAEjD1C,OAAA;MAAA0C,QAAA,gBACE1C,OAAA;QAAIwC,SAAS,EAAC,WAAW;QAAAE,QAAA,EACtBd,QAAQ,CAACO,GAAG,CAAC,CAAChB,GAAG,EAAEiB,KAAK,KAAK;UAC5B,oBACEpC,OAAA;YAAA0C,QAAA,gBACE1C,OAAA;cAAKwC,SAAS,EAAC,oBAAoB;cAAAE,QAAA,GAChC,GAAG,eACJ1C,OAAA;gBAAA0C,QAAA,GAAI,GAAC,EAACvB,GAAG;cAAA;gBAAAwB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAAM,eACf9C,OAAA;gBAAA0C,QAAA,EAAKZ,WAAW,CAACM,KAAK;cAAC;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAAM,EAC5B,IAAI;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACD,eAEN9C,OAAA;cAAIwC,SAAS,EAAC,iBAAiB;cAAAE,QAAA,EAC5BL,KAAK,CAACF,GAAG,CAAC,CAACY,IAAI,EAAEX,KAAK,KAAK;gBAC1B,oBAAOpC,OAAA;kBAAA2C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAAS;cAClB,CAAC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACF;QAET,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACC,EAAC,GAAG,eACT9C,OAAA;QAAIwC,SAAS,EAAC,iBAAiB;QAAAE,QAAA,EAC5BL,KAAK,CAACF,GAAG,CAAC,CAACY,IAAI,EAAEX,KAAK,KAAK;UAC1B,oBAAOpC,OAAA;YAAA0C,QAAA,EAAKK;UAAI;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM;QACxB,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACD,EAAC,GAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACN;AAEV;AAAC5C,EAAA,CA9HQD,SAAS;AAAA+C,EAAA,GAAT/C,SAAS;AAgIlB,eAAeA,SAAS;AACxB;EACE;AACF;AACA;AACA;AACA;AACA;AACA;AANE;AAOD,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}