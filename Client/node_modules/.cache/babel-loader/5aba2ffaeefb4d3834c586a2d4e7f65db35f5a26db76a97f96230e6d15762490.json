{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hasan\\\\Desktop\\\\ClinicProject\\\\Client\\\\src\\\\Components\\\\Scheduler.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useContext } from \"react\";\nimport { Sidebarinfo } from \"../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Scheduler() {\n  _s();\n  const mainboardextend = {\n    backgroundColor: \"#CCE2FF\",\n    marginLeft: 75,\n    top: 50\n  };\n  const mainboard = {\n    backgroundColor: \"#CCE2FF\",\n    marginLeft: 250,\n    top: 50\n  };\n  const currentYear = new Date().getFullYear();\n  const currentmonth = new Date().getMonth();\n  const {\n    hidesidebar,\n    setHidesidebar\n  } = useContext(Sidebarinfo);\n  const [year, setYear] = useState(2021);\n  const [month, setMonth] = useState(0); // 0 ocak\n  const [day, setDay] = useState(1);\n  const [daysinmonth, setDaysinmonth] = useState([]);\n  const [pageupdated, setPageupdated] = useState(false);\n  const selecteddate = `${year}${month}${day}`;\n  let firstdayofmonth = new Date(year, month, 1).getDay(); // Ayın hangi gün ile başladığını veriyor 0-6 arası. 0 Pazar günü.\n  let lastdateofmonth = new Date(year, month + 1, 0).getDate(); // Ayın kaç gün olduğunu veriyor\n\n  function getFebdays() {\n    return year % 4 === 0 ? 29 : 28;\n  }\n  const NofDays = [31, getFebdays(), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n  const weekdays = [\"Pazar\", \"Pazartesi\", \"Salı\", \"Çarşamba\", \"Perşembe\", \"Cuma\", \"Cumartesi\"];\n  const months = [\"Ocak\", \"Şubat\", \"Mart\", \"Nisan\", \"Mayıs\", \"Haziran\", \"Temmuz\", \"Ağustos\", \"Eylül\", \"Ekim\", \"Kasım\", \"Aralık\"];\n  function getNofdays() {\n    if (year !== \"\") {\n      let firstdayofthemonth = new Date(year, month, 1).getDay();\n      console.log(\"ayinilkgunu\", firstdayofthemonth);\n      for (let i = firstdayofthemonth; i > 0; i--) {\n        daysinmonth.push(NofDays[month] - i + 1);\n      }\n    }\n    for (let i = 1; i <= NofDays[month]; i++) {\n      daysinmonth.push(i);\n    }\n    return daysinmonth;\n  }\n  const hours = [\"09.00\", \"10.00\", \"11.00\", \"12.00\", \"13.00\", \"14.00\", \"15.00\", \"16.00\", \"17.00\", \"18.00\", \"19.00\", \"20.00\", \"21.00\", \"22.00\"];\n  useState(() => {\n    getNofdays();\n    console.log(\"ilkgun\", firstdayofmonth);\n    console.log(\"songun\", lastdateofmonth);\n  }, [year, pageupdated]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainboard\",\n    style: hidesidebar ? mainboardextend : mainboard,\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clinic-scheduler\",\n      children: [\" \", year, /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"scheduler\",\n        children: weekdays.map((day, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"scheduler-weekdays\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\" \", day]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this), \"  \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"scheduler-weekdays-numbers\",\n        children: daysinmonth.map((daynumber, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: daysinmonth[index]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(Scheduler, \"GcJJ/1Ngma1KqNchutRa070Qr1o=\");\n_c = Scheduler;\nexport default Scheduler;\n{\n  /* <ul className=\"scheduler-cells\">\r\n                    {hours.map((hour, index) => {\r\n                      return <li></li>;\r\n                    })}\r\n                  </ul> */\n}\n{\n  /* <ul className=\"scheduler-hours\">\r\n          {hours.map((hour, index) => {\r\n            return <li>{hour}</li>;\r\n          })}\r\n        </ul> */\n}\nvar _c;\n$RefreshReg$(_c, \"Scheduler\");","map":{"version":3,"names":["React","useState","useContext","Sidebarinfo","jsxDEV","_jsxDEV","Scheduler","_s","mainboardextend","backgroundColor","marginLeft","top","mainboard","currentYear","Date","getFullYear","currentmonth","getMonth","hidesidebar","setHidesidebar","year","setYear","month","setMonth","day","setDay","daysinmonth","setDaysinmonth","pageupdated","setPageupdated","selecteddate","firstdayofmonth","getDay","lastdateofmonth","getDate","getFebdays","NofDays","weekdays","months","getNofdays","firstdayofthemonth","console","log","i","push","hours","className","style","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","daynumber","_c","$RefreshReg$"],"sources":["C:/Users/Hasan/Desktop/ClinicProject/Client/src/Components/Scheduler.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { Sidebarinfo } from \"../App\";\r\n\r\nfunction Scheduler() {\r\n  const mainboardextend = {\r\n    backgroundColor: \"#CCE2FF\",\r\n    marginLeft: 75,\r\n    top: 50,\r\n  };\r\n  const mainboard = {\r\n    backgroundColor: \"#CCE2FF\",\r\n    marginLeft: 250,\r\n    top: 50,\r\n  };\r\n\r\n  const currentYear = new Date().getFullYear();\r\n  const currentmonth = new Date().getMonth();\r\n\r\n  const { hidesidebar, setHidesidebar } = useContext(Sidebarinfo);\r\n  const [year, setYear] = useState(2021);\r\n  const [month, setMonth] = useState(0); // 0 ocak\r\n  const [day, setDay] = useState(1);\r\n  const [daysinmonth, setDaysinmonth] = useState([]);\r\n  const [pageupdated, setPageupdated] = useState(false);\r\n\r\n  const selecteddate = `${year}${month}${day}`;\r\n  let firstdayofmonth = new Date(year, month, 1).getDay(); // Ayın hangi gün ile başladığını veriyor 0-6 arası. 0 Pazar günü.\r\n  let lastdateofmonth = new Date(year, month + 1, 0).getDate(); // Ayın kaç gün olduğunu veriyor\r\n\r\n  function getFebdays() {\r\n    return year % 4 === 0 ? 29 : 28;\r\n  }\r\n\r\n  const NofDays = [31, getFebdays(), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n\r\n  const weekdays = [\r\n    \"Pazar\",\r\n    \"Pazartesi\",\r\n    \"Salı\",\r\n    \"Çarşamba\",\r\n    \"Perşembe\",\r\n    \"Cuma\",\r\n    \"Cumartesi\",\r\n  ];\r\n  const months = [\r\n    \"Ocak\",\r\n    \"Şubat\",\r\n    \"Mart\",\r\n    \"Nisan\",\r\n    \"Mayıs\",\r\n    \"Haziran\",\r\n    \"Temmuz\",\r\n    \"Ağustos\",\r\n    \"Eylül\",\r\n    \"Ekim\",\r\n    \"Kasım\",\r\n    \"Aralık\",\r\n  ];\r\n\r\n  function getNofdays() {\r\n    if (year !== \"\") {\r\n      let firstdayofthemonth = new Date(year, month, 1).getDay();\r\n      console.log(\"ayinilkgunu\", firstdayofthemonth);\r\n\r\n      for (let i = firstdayofthemonth; i > 0; i--) {\r\n        daysinmonth.push(NofDays[month] - i + 1);\r\n      }\r\n    }\r\n    for (let i = 1; i <= NofDays[month]; i++) {\r\n      daysinmonth.push(i);\r\n    }\r\n\r\n    return daysinmonth;\r\n  }\r\n\r\n  const hours = [\r\n    \"09.00\",\r\n    \"10.00\",\r\n    \"11.00\",\r\n    \"12.00\",\r\n    \"13.00\",\r\n    \"14.00\",\r\n    \"15.00\",\r\n    \"16.00\",\r\n    \"17.00\",\r\n    \"18.00\",\r\n    \"19.00\",\r\n    \"20.00\",\r\n    \"21.00\",\r\n    \"22.00\",\r\n  ];\r\n\r\n  useState(() => {\r\n    getNofdays();\r\n    console.log(\"ilkgun\", firstdayofmonth);\r\n    console.log(\"songun\", lastdateofmonth);\r\n  }, [year, pageupdated]);\r\n\r\n  return (\r\n    <div\r\n      className=\"mainboard\"\r\n      style={hidesidebar ? mainboardextend : mainboard}\r\n    >\r\n      {\" \"}\r\n      <div className=\"clinic-scheduler\">\r\n        {\" \"}\r\n        {year}\r\n        <ul className=\"scheduler\">\r\n          {weekdays.map((day, index) => {\r\n            return (\r\n              <li>\r\n                <div className=\"scheduler-weekdays\">\r\n                  {\" \"}\r\n                  <h3> {day}</h3>\r\n                  {\"  \"}\r\n                </div>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n        <ul className=\"scheduler-weekdays-numbers\">\r\n          {daysinmonth.map((daynumber, index) => {\r\n            return <li>{daysinmonth[index]}</li>;\r\n\r\n          })}\r\n        </ul>\r\n      </div>{\" \"}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Scheduler;\r\n{\r\n  /* <ul className=\"scheduler-cells\">\r\n                    {hours.map((hour, index) => {\r\n                      return <li></li>;\r\n                    })}\r\n                  </ul> */\r\n}\r\n{\r\n  /* <ul className=\"scheduler-hours\">\r\n          {hours.map((hour, index) => {\r\n            return <li>{hour}</li>;\r\n          })}\r\n        </ul> */\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}